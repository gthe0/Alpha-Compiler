if  IF  KEYWORD
else ELSE  KEYWORD
while WHILE  KEYWORD
for FOR  KEYWORD
function FUNC  KEYWORD
return RET  KEYWORD
break BREAK  KEYWORD
continue CONTINUE  KEYWORD
and AND  KEYWORD
not NOT  KEYWORD
or OR  KEYWORD
local LOCAL   KEYWORD
true TRUE  KEYWORD
false FALSE  KEYWORD
nil NIL  KEYWORD
INT _ INTCONST
FLOAT _ REALCONST
ID _ IDENTIFIER
[   BRACKETS_OPEN
]   BRACKETS_CLOSE
{   BRACES_OPEN
}   BRACES_CLOSE
(   PARENT_OPEN
)   PARENT_CLOSE
,   COMMA
;   SEMI_COL   
:   COL
::  DOUBLE_COL
.   DOT
..  DOUBLE_DOT
=   ASSIGN_OP
+   PLUS_OP
-   MINUS_OP
*   MULT_OP
/   DIV_OP
%   MOD_OP
==  EQ_OP
!=  NE_OP
++  INC_OP
--  DEC_OP
>   GT_OP
<   LT_OP
>=  GE_OP
<=  LE_OP