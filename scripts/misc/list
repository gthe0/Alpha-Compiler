if  IF  KEYWORD
else ELSE  KEYWORD
while WHILE  KEYWORD
for FOR  KEYWORD
function FUNC  KEYWORD
return RET  KEYWORD
break BREAK  KEYWORD
continue CONTINUE  KEYWORD
and AND  KEYWORD
not NOT  KEYWORD
or OR  KEYWORD
local LOCAL KEYWORD
true TRUE  KEYWORD
false FALSE  KEYWORD
nil NIL  KEYWORD
[   BRACKETS_OPEN PUNCT
]   BRACKETS_CLOSE PUNCT
{   BRACES_OPEN  PUNCT
}   BRACES_CLOSE PUNCT
(   PARENT_OPEN PUNCT
)   PARENT_CLOSE PUNCT
,   COMMA PUNCT
;   SEMI_COL    PUNCT
:   COL PUNCT
::  DOUBLE_COL PUNCT
.   DOT PUNCT
..  DOUBLE_DOT PUNCT
=   ASSIGN_OP PUNCT
+   PLUS_OP PUNCT
-   MINUS_OP PUNCT
*   MULT_OP PUNCT
/   DIV_OP PUNCT
%   MOD_OP PUNCT
==  EQ_OP PUNCT
!=  NE_OP PUNCT
++  INC_OP PUNCT
--  DEC_OP PUNCT
>   GT_OP PUNCT
<   LT_OP PUNCT
>=  GE_OP PUNCT
<=  LE_OP PUNCT
INT INT INTCONST
FLOAT FLOAT REALCONST
ID ID IDENTIFIER